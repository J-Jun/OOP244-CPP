Final Project Milestone 5
Module:         Reflection
Filename:		reflect.txt
Author:         Jason Jun
Student Number: 126 683 200
Email:          jjun10@myseneca.ca
-----------------------------------------------------------
Date         Reason
2020/04/08   Started to work on the Reflection
2020/04/08   Submitted the Reflection
-----------------------------------------------------------

For the past few weeks, I have been working on the final project, from Milestone 1 to Milestone 5. When working on those Milestones, I have learned a lot and was able to utilize the new topics and materials in the final project. Moreover, the OOP lectures I have attended in between the Milestones really helped me out to figure out how I should design my project. While working on Milestone 1, I have encountered a new function which is "cin.fail()". The function returns a true value when there is an input failure. Using this function, I was able to catch whether the inputted value was correct or not. I was able to use other new functions, such as "cin.clear()" (clears the error state of the buffer) and "cin.ignore()" (used to clear one more character from the input buffer) to successfully build a function that was required. Also, overloading topic was used in the Milestone 1 where I had to overload operators, such as "Time& Time::operator+=(const Time& D) {...}" and "Time& Time::operator=(unsigned int val) {...}". Using these topics and materials, I was able to review again what each of them does and understand deeper. In Milestone 2, the topics of constructor, destructor, overloading, and derived classes. The constructor and destructor were used in most of the later workshops I have been doing, so it was not that difficult, but derived classes were a bit confusing at first. However, with the OOP website notes and the recorded lectures, I was able to understand it deeper, so the derived class was not hard to implement in Milestone 2. Overloading was used in Milestone 2 too, so getting the idea of writing it was easy. 

When starting Milestone 3, a new topic was introduced and it is a virtual function. A virtual function is part of polymorphism, where polymorphism can be explained as a single identifier that contains multiple meanings. Milestone 3 had the "pure virtual function", where the function had no definition. For example, in Milestone 3, I have used the pure virtual function method on the "type()" function, "virtual char type()const = 0;". By doing so, the "type()" function can be defined in the later Milestones. Also, the method of prohibiting copies was introduced in Milestone 3 and after reading the notes, I was able to use it within this Milestone. Other than these new topics, other topics and materials implemented in this Milestone were repetitive, such as overriding, constructor, and destructor. 

On both Milestone 4 and 5, the topics and materials covered and used in the previous Milestones were used again, such as overriding and constructors. However, in Milestone 4, a topic of reading files was introduced. With the new topic, I was able to read the data files that were given to me by the Professors and work my way through. In Milestone 5, I have learned to initialize member variables. When initializing them, a specific form was introduced to me in instructions, where it is a similar form of inheriting from a derived class. For example, if a member variable is "int n_var", it can be initialized in this form, "newClass(int i) : n_var(i) {...}". In Milestone 5, every class made from previous Milestones was used and I was able to realize that having a proper foundation of classes and functions written within a big project is important. The reason is that if one of the previous functions was not written properly, I would have to go through all the functions I have written and try to fix them in the future. Working my way through this entire project had me review what I have learned so far throughout this semester. All the lectures and the notes provided by the Professors were really important and having Professor Hong was really thankful. Having him as my to teach me OOP244 got me to understand the concepts he taught and implement them and Professor Hong had been quick with replying to questions I had through Microsoft Teams. Therefore, this final project had taught me a lot and think about what I want to do in the future