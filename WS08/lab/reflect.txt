==============================================
Name:           Jason Jun
Student Number: 126 683 200
Email:          jjun10@myseneca.ca
Section:        OOP244 NCC
Workshop:       Workshop 8 - LAB
==============================================

On a week of working on Workshop 8, I have also worked on Milestone 3. While working on Workshop 8, I have tackled the topics of virtual functions, abstract base classes. A virtual function is one of the examples of polymorphism. Polymorphism is where a single identifier contains multiple meanings and polymorphic can be referred to as "of many forms". By implementing the polymorphism in a source code, it increases the flexibility and it gets the code to be easier to read. Having a virtual function reduces the size of a source code. Also, this workshop had used shadowing classes like the last Workshop. For example, in the Workshop, we had to override few functions and one of them is "draw" function. Every class their own definition of draw function. Hence, it can be seen as a virtual function. Next, in the Workshop, the pure virtual function was used, which is one of the components of abstract base classes. Abstract base class means that any class that contains or inherits at least one pure virtual function. A pure virtual function is a signature without a definition, so it lacks implementation detail. When declaring the pure virtual function, it can be written in this format "virtual Type identifier(parameters) = 0;". The assignment to 0 represents the pure virtual form. Some examples of pure virtual functions used in the Workshop are "virtual void draw(std::ostream& ostr)const = 0;" and "virtual void getSpecs(std::istream& istr) = 0;". By having these pure virtual functions, other classes were able to define them according to their classes. Also, in Milestone 3, the virtual functions were used, where the functions are "csvWrite", "csvRead", "write", "read". Therefore, in Workshop 8 and the Milestone 3, the virtual functions and abstract base classes were used.